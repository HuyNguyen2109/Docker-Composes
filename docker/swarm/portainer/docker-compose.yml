version: "3.3"

services:
  agent:
    image: portainer/agent
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - traefik-swarm-network
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux
          
  portainer:
    image: portainer/portainer-ee:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - 9000:9000
    networks:
      - traefik-swarm-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime
      - /mnt/docker-data/portainer:/data
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role==manager
      labels:
        # Frontend
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-swarm-network"
        - "traefik.http.routers.portainer.rule=Host(`docker-ui.mcb-svc.work`)"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.middlewares=portainer-mw"
        - "traefik.http.middlewares.portainer-mw.stripprefix.prefixes=/portainer"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        - "traefik.http.routers.portainer.service=portainer"
        - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
        - "traefik.http.services.portainer.loadbalancer.sticky.cookie=true"
        - "traefik.http.services.portainer.loadbalancer.sticky.cookie.name=portainer_ha"

networks:
  traefik-swarm-network:
    external: true
