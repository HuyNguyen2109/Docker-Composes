version: '3.8'

services:
  traefik:
    image: traefik:v3.3
    networks:
      - traefik-swarm-network
    ports:
      - 80:80
      - 443:443
      - 8088:8088
    secrets:
      - cloudflare-api-key
      - cloudflare-email
    deploy:
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
        max_failure_ratio: 0.5
      resources:
        limits:
          cpus: "0.5"        # Limit the service to 50% of a single CPU core
          memory: "512M"     # Limit the service to 512MB of memory
        reservations:
          cpus: "0.25"       # Reserve 25% of a single CPU core for the service
          memory: "256M"     # Reserve 256MB of memory for the service
      placement:
        constraints:
          - node.role==manager
      labels:
          - traefik.enable=true
          - traefik.http.middlewares.admin.basicauth.users=${TRAEFIK_ADMIN_CREDENTIALS}
          - traefik.swarm.network=traefik-swarm-network
      
          - traefik.http.routers.thisproxylocal.rule=Host(`${HOST_IP}`)
          - traefik.http.routers.thisproxylocal.entryPoints=console
          - traefik.http.routers.thisproxylocal.service=api@internal
          - traefik.http.routers.thisproxylocal.middlewares=admin
      
          - traefik.http.services.thisproxytls.loadbalancer.server.port=8088
          - traefik.http.routers.thisproxytls.rule=Host(`traefik.${ROOT_DOMAIN}`)
          - traefik.http.routers.thisproxytls.entrypoints=websecure
          - traefik.http.routers.thisproxytls.service=api@internal
          - traefik.http.routers.thisproxytls.middlewares=admin
          - traefik.http.routers.thisproxytls.tls.certresolver=letsencrypt
    command:
      # For docker configuration
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.swarm.endpoint=unix:///var/run/docker.sock
      - --providers.swarm.network=traefik-swarm-network
      # Enable entryPoints
      - --entryPoints.console.address=:8088
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.web.http.redirections.entrypoint.permanent=true
      # Enable dashboard
      - --api=true
      - --api.insecure=true
      - --global.checkNewVersion=true
      - --log.level=DEBUG
      - --log.format=json
      - --log.filePath=/logs/traefik.log
      - --accessLog.filePath=/logs/access.log
      - --accessLog.bufferingSize=100
      # Certificates
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=${CF_API_EMAIL}  # replace with your email
      - --certificatesresolvers.letsencrypt.acme.storage=acme/acme.json
      # - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-acme:/acme
      - traefik-logs:/logs
    environment:
      - CF_API_EMAIL=/run/secrets/clouflare-email
      - CF_API_KEY=/run/secrets/cloudflare-api-key
      - TZ=Asia/Ho_Chi_Minh
    
  whoami:
    image: "traefik/whoami"
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==worker
      labels:
        - traefik.enable=true
        - traefik.swarm.network=traefik-swarm-network
        - traefik.http.routers.whoami.rule=Host(`${ROOT_DOMAIN}`) && Path(`/health-check`)
        - traefik.http.routers.whoami.entrypoints=websecure
        - traefik.http.routers.whoami.tls.certresolver=letsencrypt
        - traefik.http.services.whoami.loadbalancer.server.port=80
        - traefik.http.services.whoami.loadbalancer.sticky.cookie=true
        - traefik.http.services.whoami.loadbalancer.sticky.cookie.name=whoami_ha
    networks:
      - traefik-swarm-network
      
networks:
  traefik-swarm-network:
    external: true
    
secrets:
  cloudflare-api-key:
    external: true
  cloudflare-email:
    external: true

volumes:
  traefik-acme:
    external: true
  traefik-logs:
    external: true
