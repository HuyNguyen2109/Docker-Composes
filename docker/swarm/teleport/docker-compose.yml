version: "3.8"

services:
  teleport:
    image: public.ecr.aws/gravitational/teleport-distroless:17.2.2
    deploy:
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
      replicas: 1
      resources:
        limits:
          cpus: "0.5"        # Limit the service to 50% of a single CPU core
          memory: "2G"     # Limit the service to 512MB of memory
        reservations:
          cpus: "0.25"       # Reserve 25% of a single CPU core for the service
          memory: "1G"
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role==worker
      labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-swarm-network"
      - "traefik.http.services.teleport.loadbalancer.server.port=3080"
      - "traefik.http.services.teleport.loadbalancer.server.scheme=https"
      - "traefik.http.routers.teleport.entrypoints=websecure"
      - "traefik.http.routers.teleport.rule=HostRegexp(`teleport.${ROOT_DOMAIN}`) || HostRegexp(`{subhost:[a-z]+}.teleport.${ROOT_DOMAIN}`)"
      - "traefik.http.routers.teleport.service=teleport"
      - "traefik.http.routers.teleport.tls=true"
      - "traefik.http.routers.teleport.tls.certresolver=letsencrypt"
      - "traefik.http.routers.teleport.tls.domains[0].main=teleport.${ROOT_DOMAIN}"
      - "traefik.http.routers.teleport.tls.domains[0].sans=*.teleport.${ROOT_DOMAIN}"
    volumes:
      - /mnt/big-data/docker/teleport/data:/var/lib/teleport # Persistent storage for Teleport
      - /mnt/big-data/docker/teleport/teleport.yaml:/etc/teleport/teleport.yaml:ro
    networks:
      - traefik-swarm-network
    environment:
      TELEPORT_CONFIG_FILE: /etc/teleport/teleport.yaml

networks:
  traefik-swarm-network:
    external: true
