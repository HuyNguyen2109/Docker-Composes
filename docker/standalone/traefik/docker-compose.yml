services:
  traefik:
    image: traefik:latest
    container_name: traefik
    networks:
      - traefik-internetwork
    ports:
      - 80:80
      - 443:443
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.file.filename=/etc/traefik/middlewares.yaml
      
      - --entryPoints.console.address=:8088
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.web.http.redirections.entrypoint.permanent=true
      
      - --api=true
      - --api.insecure=true
      - --global.checkNewVersion=true
      - --log.level=DEBUG
      - --log.filePath=/logs/traefik.log
      - --accessLog.filePath=/logs/access.log
      - --accessLog.bufferingSize=100
      
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=${CF_API_EMAIL}  # replace with your email
      - --certificatesresolvers.letsencrypt.acme.storage=acme/acme.json
      - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
    labels:
      - traefik.enable=true
      
      - traefik.http.routers.thisproxylocal.rule=Host(`${PUBLIC_IP}`)
      - traefik.http.routers.thisproxylocal.entryPoints=console
      - traefik.http.routers.thisproxylocal.service=api@internal
      
      - traefik.http.services.thisproxytls.loadbalancer.server.port=8088
      - traefik.http.routers.thisproxytls.rule=Host(`${TRAEFIK_URL}`)
      - traefik.http.routers.thisproxytls.entrypoints=websecure
      - traefik.http.routers.thisproxytls.service=api@internal
      - traefik.http.routers.thisproxytls.tls.certresolver=letsencrypt
      # Authentication with Authentik server
      - "traefik.http.routers.thisproxylocal.middlewares=authentik@file"
      - "traefik.http.routers.thisproxytls.middlewares=authentik@file"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-acme:/acme
      - traefik-logs:/logs
      - ./config:/etc/traefik
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
    restart: always
    
  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    restart: unless-stopped
    networks:
      - traefik-internetwork
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-internetwork
      - traefik.http.routers.whoami.rule=Host(`${TRAEFIK_URL}`) && Path(`/health-check`)
      - traefik.http.routers.whoami.entrypoints=websecure
      - traefik.http.routers.whoami.tls.certresolver=letsencrypt

volumes:
  traefik-acme:
    external: true
  traefik-logs:
    external: true
      
networks:
  traefik-internetwork:
    external: true
